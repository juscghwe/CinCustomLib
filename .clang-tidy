# Google C/C++ Naming Conventions settings
# Author: Julian Schweizer

Checks: "-*,readability-*,performance-*,modernize-*,bugprone-*,cppcoreguidelines-*,clang-analyzer-*"
CheckOptions:
  - key: readability-identifier-naming.ClassCase
    value: CamelCase # Enforces class names to be CamelCase
  - key: readability-identifier-naming.StructCase
    value: CamelCase # Enforces struct names to be CamelCase
  - key: readability-identifier-naming.FunctionCase
    value: camelBack # Enforces function names to be camelCase
  - key: readability-identifier-naming.VariableCase
    value: camelBack # Enforces variable names to be camelCase
  - key: readability-identifier-naming.ConstantCase
    value: UPPER_CASE # Enforces constants to be in UPPER_CASE
  - key: readability-identifier-naming.ConstantPrefix
    value: k_ # Enforces constants to start with "k_"
  - key: readability-identifier-naming.GlobalConstantCase
    value: UPPER_CASE # Enforces global constants to be UPPER_CASE
  - key: readability-identifier-naming.MemberCase
    value: camelBack # Enforces class members to be camelCase
  - key: readability-identifier-naming.PrivateMemberPrefix
    value: m_ # Enforces private members to have "m_" prefix
  - key: readability-identifier-naming.EnumConstantCase
    value: CamelCase # Enforces CamelCase for enum values

  # Additional checks
  - key: modernize-use-trailing-return-type
    value: false # Set to true to enforce trailing return types, or false to prefer traditional return types
